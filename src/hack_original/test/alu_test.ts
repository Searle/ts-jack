import ALU from "../cpu/alu";

export default class ALU_test {
    public test(verbose: boolean): void {
        console.log("***** ALU TEST START ******");

        const alu = new ALU();
        const x = [
            0b0000000000000000, 0b0000000000000000, 0b0000000000000000,
            0b0000000000000000, 0b0000000000000000, 0b0000000000000000,
            0b0000000000000000, 0b0000000000000000, 0b0000000000000000,
            0b0000000000000000, 0b0000000000000000, 0b0000000000000000,
            0b0000000000000000, 0b0000000000000000, 0b0000000000000000,
            0b0000000000000000, 0b0000000000000000, 0b0000000000000000,
            0b0000000000010001, 0b0000000000010001, 0b0000000000010001,
            0b0000000000010001, 0b0000000000010001, 0b0000000000010001,
            0b0000000000010001, 0b0000000000010001, 0b0000000000010001,
            0b0000000000010001, 0b0000000000010001, 0b0000000000010001,
            0b0000000000010001, 0b0000000000010001, 0b0000000000010001,
            0b0000000000010001, 0b0000000000010001, 0b0000000000010001,
        ];
        const y = [
            0b1111111111111111, 0b1111111111111111, 0b1111111111111111,
            0b1111111111111111, 0b1111111111111111, 0b1111111111111111,
            0b1111111111111111, 0b1111111111111111, 0b1111111111111111,
            0b1111111111111111, 0b1111111111111111, 0b1111111111111111,
            0b1111111111111111, 0b1111111111111111, 0b1111111111111111,
            0b1111111111111111, 0b1111111111111111, 0b1111111111111111,
            0b0000000000000011, 0b0000000000000011, 0b0000000000000011,
            0b0000000000000011, 0b0000000000000011, 0b0000000000000011,
            0b0000000000000011, 0b0000000000000011, 0b0000000000000011,
            0b0000000000000011, 0b0000000000000011, 0b0000000000000011,
            0b0000000000000011, 0b0000000000000011, 0b0000000000000011,
            0b0000000000000011, 0b0000000000000011, 0b0000000000000011,
        ];
        const comp = [
            0b101010, 0b111111, 0b111010, 0b001100, 0b110000, 0b001101,
            0b110001, 0b001111, 0b110011, 0b011111, 0b110111, 0b001110,
            0b110010, 0b000010, 0b010011, 0b000111, 0b000000, 0b010101,
            0b101010, 0b111111, 0b111010, 0b001100, 0b110000, 0b001101,
            0b110001, 0b001111, 0b110011, 0b011111, 0b110111, 0b001110,
            0b110010, 0b000010, 0b010011, 0b000111, 0b000000, 0b010101,
        ];
        const out = [
            0b0000000000000000, 0b0000000000000001, 0b1111111111111111,
            0b0000000000000000, 0b1111111111111111, 0b1111111111111111,
            0b0000000000000000, 0b0000000000000000, 0b0000000000000001,
            0b0000000000000001, 0b0000000000000000, 0b1111111111111111,
            0b1111111111111110, 0b1111111111111111, 0b0000000000000001,
            0b1111111111111111, 0b0000000000000000, 0b1111111111111111,
            0b0000000000000000, 0b0000000000000001, 0b1111111111111111,
            0b0000000000010001, 0b0000000000000011, 0b1111111111101110,
            0b1111111111111100, 0b1111111111101111, 0b1111111111111101,
            0b0000000000010010, 0b0000000000000100, 0b0000000000010000,
            0b0000000000000010, 0b0000000000010100, 0b0000000000001110,
            0b1111111111110010, 0b0000000000000001, 0b0000000000010011,
        ];
        const zr = [
            1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        ].map((value) => value !== 0);
        const ng = [
            0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0,
            1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0,
        ].map((value) => value !== 0);

        const nTests = x.length;

        if (verbose) console.log("*** Functionality Test Start ***");

        let failed = 0;

        for (let i = 0; i < nTests; i++) {
            let outString =
                "ALU Test " + (i + 1).toString().padStart(2, "0") + ": ";
            const currentTestResults = alu.out(x[i], y[i], comp[i]);

            if (
                currentTestResults[0] == out[i] &&
                currentTestResults[1] == zr[i] &&
                currentTestResults[2] == ng[i]
            ) {
                outString += "Passed";
            } else {
                outString += "Failed";
                failed++;
            }

            if (verbose) console.log(outString);
        }

        console.log(
            "Completed " +
                nTests +
                " functionality tests of which " +
                failed +
                " failed."
        );
        if (verbose) console.log("*** Functionality Test End ***");

        // SPEED TEST
        if (verbose) console.log("*** Speed Test Start ***");

        const repeat = 1000000;
        let timeElapsed = 0;

        for (let j = 0; j < repeat; j++) {
            if (j % 100000 == 0 && verbose)
                console.log("[Testing performance...]");
            const a = Math.floor(Math.random() * nTests);
            const b = Math.floor(Math.random() * nTests);
            const c = Math.floor(Math.random() * nTests);
            const start = performance.now();
            alu.out(x[a], y[b], comp[c]);
            const end = performance.now();
            timeElapsed += end - start;
        }

        const msPerOperation = timeElapsed / repeat;

        console.log(
            "The ALU performance is " + msPerOperation + "ms/operation."
        );
        if (verbose) console.log("*** Speed Test End ***");

        console.log("***** ALU TEST END ******");
    }
}
