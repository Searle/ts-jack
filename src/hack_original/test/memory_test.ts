import Memory from "../memory";

export default class Memory_test {
    public test(verbose: boolean): void {
        console.log("***** MEMORY TEST START ******");

        // FUNCTIONALITY TEST
        const memory = new Memory();
        const inn = [
            0b1111111111111111, 0b1111111111111111, 0b0010011100001111,
            0b0010011100001111, 0b0010011100001111, 0b0010011100001111,
            0b0000100010101110, 0b0000100010101110, 0b0010011100001111,
            0b0010011100001111, 0b0010011100001111, 0b0010011100001111,
            0b0010011100001111, 0b0010011100001111, 0b0010011100001111,
            0b0010011100001111, 0b0010011100001111, 0b0010011100001111,
            0b0010011100001111, 0b0010011100001111, 0b0010011100001111,
            0b0010011100001111, 0b0010011100001111, 0b0010011100001111,
            0b0010011100001111, 0b0010011100001111, 0b0000010011010010,
            0b0000010011010010, 0b0000010011010010, 0b0000010011010010,
            0b0000100100101001, 0b0000100100101001, 0b0000100100101001,
            0b0000100100101001, 0b0000100100101001, 0b1111111111111111,
            0b1111111111111111, 0b1111111111111111, 0b1111111111111111,
            0b1111111111111111, 0b1111111111111111, 0b1111111111111111,
            0b1111111111111111, 0b1111111111111111, 0b1111111111111111,
            0b1111111111111111, 0b1111111111111111, 0b1111111111111111,
            0b1111111111111111, 0b1111111111111111, 0b1111111111111111,
            0b1111111111111111, 0b1111111111111111,
        ];
        const address = [
            0b000000000000000, 0b000000000000000, 0b000000000000000,
            0b000000000000000, 0b010000000000000, 0b100000000000000,
            0b010000000000000, 0b010000000000000, 0b010000000000000,
            0b010000000000000, 0b000000000000000, 0b100000000000000,
            0b000000000000001, 0b000000000000010, 0b000000000000100,
            0b000000000001000, 0b000000000010000, 0b000000000100000,
            0b000000001000000, 0b000000010000000, 0b000000100000000,
            0b000001000000000, 0b000010000000000, 0b000100000000000,
            0b001000000000000, 0b010000000000000, 0b001001000110100,
            0b001001000110100, 0b010001000110100, 0b110001000110100,
            0b010001101000101, 0b010001101000101, 0b000001101000101,
            0b100001101000101, 0b110000000000000, 0b100111111001111,
            0b101000001001111, 0b000111111001111, 0b010111111001111,
            0b100111111001110, 0b100111111001101, 0b100111111001011,
            0b100111111000111, 0b100111111011111, 0b100111111101111,
            0b100111110001111, 0b100111101001111, 0b100111011001111,
            0b100110111001111, 0b100101111001111, 0b100011111001111,
            0b101111111001111, 0b110000000000000,
        ];
        const load = [
            1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0,
        ].map((value) => value !== 0);
        const out = [
            0b0000000000000000, 0b1111111111111111, 0b1111111111111111,
            0b1111111111111111, 0b0000000000000000, 0b0000000000000000,
            0b0000000000000000, 0b0000100010101110, 0b0000100010101110,
            0b0000100010101110, 0b1111111111111111, 0b0000000000000000,
            0b0000000000000000, 0b0000000000000000, 0b0000000000000000,
            0b0000000000000000, 0b0000000000000000, 0b0000000000000000,
            0b0000000000000000, 0b0000000000000000, 0b0000000000000000,
            0b0000000000000000, 0b0000000000000000, 0b0000000000000000,
            0b0000000000000000, 0b0000100010101110, 0b0000000000000000,
            0b0000010011010010, 0b0000000000000000, 0b0000000000000000,
            0b0000000000000000, 0b0000100100101001, 0b0000000000000000,
            0b0000000000000000, 0b0000000001001011, 0b1111111111111111,
            0b1111111111111111, 0b0000000000000000, 0b0000000000000000,
            0b0000000000000000, 0b0000000000000000, 0b0000000000000000,
            0b0000000000000000, 0b0000000000000000, 0b0000000000000000,
            0b0000000000000000, 0b0000000000000000, 0b0000000000000000,
            0b0000000000000000, 0b0000000000000000, 0b0000000000000000,
            0b0000000000000000, 0b0000000001011001,
        ];

        const nTests = inn.length;

        if (verbose) console.log("*** Functionality Test Start ***");

        let failed = 0;

        memory.writeWord(0b100111111001111, 0b1111111111111111);
        memory.writeWord(0b101000001001111, 0b1111111111111111);

        for (let i = 0; i < nTests; i++) {
            let outString =
                "Memory Test " + (i + 1).toString().padStart(2, "0") + ": ";

            if (i === 34) memory.writeWord(0b110000000000000, 75);
            if (i === 52) memory.writeWord(0b110000000000000, 89);

            const currentTestResults = memory.out(inn[i], load[i], address[i]);

            if (currentTestResults === out[i]) {
                outString += "Passed";
            } else {
                outString += "Failed";
                failed++;
            }

            if (verbose) console.log(outString);
        }

        console.log(
            "Completed " +
                nTests +
                " functionality tests of which " +
                failed +
                " failed."
        );
        if (verbose) console.log("*** Functionality Test End ***");

        // SPEED TEST
        if (verbose) console.log("*** Speed Test Start ***");

        const repeat = 1000000;
        let timeElapsed = 0;

        for (let j = 0; j < repeat; j++) {
            if (j % 100000 === 0 && verbose)
                console.log("[Testing performance...]");
            const a = Math.floor(Math.random() * nTests);
            const b = Math.floor(Math.random() * nTests);
            const c = Math.floor(Math.random() * nTests);
            const start = performance.now();
            memory.out(inn[a], load[b], address[c]);
            const end = performance.now();
            timeElapsed += end - start;
        }

        const msPerOperation = timeElapsed / repeat;

        console.log(
            "The Memory performance is " + msPerOperation + "ms/operation."
        );
        if (verbose) console.log("*** Speed Test End ***");

        console.log("***** MEMORY TEST END ******");
    }
}
